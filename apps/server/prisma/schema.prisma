// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(uuid())
  username    String @unique @default(cuid())
  email       String @unique
  displayName String
  password    String

  roles UserRole[] @default([USER])

  messages      Message[]
  tokens        Token[]
  channels      Channel[] @relation("ChannelUsers")
  ownedChannels Channel[] @relation("ChannelOwner")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Token {
  id    String @id @default(uuid())
  token String @unique @default(cuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime

  @@map("tokens")
}

model Message {
  id      String @id @default(uuid())
  content String

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  channelId String
  channel   Channel @relation(fields: [channelId], references: [id])

  editedAt  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("messages")
}

model Channel {
  id          String  @id @default(uuid())
  name        String
  description String?

  messages Message[]
  users    User[]    @relation("ChannelUsers")

  ownerId String
  owner   User   @relation("ChannelOwner", fields: [ownerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("channels")
}

enum UserRole {
  USER
  ADMIN
}
